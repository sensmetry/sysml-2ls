{
  "name": "sysml",
  "scopeName": "source.sysml",
  "fileTypes": [
    ".sysml"
  ],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "name": "keyword.control.sysml",
      "match": "\\b(about|abstract|accept|action|actor|after|alias|all|allocate|allocation|analysis|and|as|assert|assign|assume|at|attribute|bind|binding|by|calc|case|comment|concern|connect|connection|constraint|decide|def|default|defined|dependency|derived|do|doc|else|end|entry|enum|event|exhibit|exit|expose|false|filter|first|flow|for|fork|frame|from|hastype|if|implies|import|in|include|individual|inout|interface|istype|item|join|language|library|locale|loop|merge|message|meta|metadata|nonunique|not|null|objective|occurrence|of|or|ordered|out|package|parallel|part|perform|port|private|protected|public|readonly|redefines|ref|references|render|rendering|rep|require|requirement|return|satisfy|send|snapshot|specializes|stakeholder|standard|state|subject|subsets|succession|terminate|then|timeslice|to|transition|true|until|use|variant|variation|verification|verify|via|view|viewpoint|when|while|xor)\\b"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.block.sysml",
          "begin": "//\\*",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.sysml"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.sysml"
            }
          }
        },
        {
          "begin": "//",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.sysml"
            }
          },
          "end": "(?=$)",
          "name": "comment.line.sysml"
        }
      ]
    }
  }
}

{
    "name": "sysml-2ls",
    "displayName": "SysIDE Editor",
    "description": "SysML v2 language support in VS Code.",
    "publisher": "Sensmetry",
    "author": {
        "name": "Sensmetry",
        "url": "https://sensmetry.com/",
        "email": "opensource@sensmetry.com"
    },
    "version": "0.8.0",
    "icon": "icons/logo.png",
    "engines": {
        "vscode": "^1.56.0"
    },
    "categories": [
        "Programming Languages",
        "Other",
        "Formatters",
        "Linters"
    ],
    "keywords": [
        "SysML",
        "KerML",
        "SysML-v2"
    ],
    "preview": true,
    "extensionKind": [
        "workspace",
        "ui"
    ],
    "repository": {
        "url": "https://gitlab.com/sensmetry/public/sysml-2ls",
        "type": "git",
        "directory": "packages/syside-vscode"
    },
    "bugs": {
        "url": "https://gitlab.com/sensmetry/public/sysml-2ls/-/issues"
    },
    "activationEvents": [
        "onLanguage:kerml",
        "onLanguage:sysml"
    ],
    "files": [
        "out",
        "src"
    ],
    "main": "./dist/node/extension.js",
    "browser": "./dist/browser/extension.js",
    "scripts": {
        "lint": "eslint src --ext ts --max-warnings 0",
        "clean": "shx rm -rf out *.tsbuildinfo",
        "build": "pnpm run typecheck && pnpm run esbuild",
        "watch": "concurrently -n tsc,esbuild -c blue,yellow \"pnpm run typecheck -w\" \"pnpm run esbuild:watch\"",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "vscode:prepublish": "pnpm run clean && node ./scripts/prepublish.mjs",
        "vscode:package": "node ./scripts/package.mjs",
        "vscode:publish": "node ./scripts/publish.mjs",
        "ovsx:publish": "ovsx publish",
        "esbuild": "concurrently -n node,web -c blue,yellow \"pnpm run esbuild-base:node --minify\" \"pnpm run esbuild-base:browser --minify\"",
        "esbuild:watch": "concurrently -n node,web -c blue,yellow \"pnpm run esbuild:node --watch\" \"pnpm run esbuild:browser --watch\"",
        "esbuild-base:node": "node ../../scripts/build.mjs node src/node/extension.ts src/node/language-server/main.ts -o ./dist/node",
        "esbuild:node": "pnpm run esbuild-base:node --sourcemap",
        "esbuild-base:browser": "node ../../scripts/build.mjs browser src/browser/extension.ts src/browser/language-server/main.ts -o ./dist/browser",
        "esbuild:browser": "pnpm run esbuild-base:browser --sourcemap inline",
        "generate:schema": "node ./scripts/generate-schemas.mjs"
    },
    "dependencies": {
        "fs-extra": "^11.1.0",
        "node-fetch": "^3.3.2",
        "syside-languageclient": "workspace:*",
        "syside-languageserver": "workspace:*",
        "syside-base": "workspace:*",
        "syside-protocol": "workspace:*",
        "vscode-languageclient": "~8.0.2",
        "vscode-languageserver": "~8.0.2",
        "vscode-uri": "3.0.7"
    },
    "devDependencies": {
        "@types/fs-extra": "^11.0.1",
        "@types/vscode": "^1.56.0",
        "@vscode/vsce": "^2.20.0",
        "ovsx": "^0.8.0",
        "typescript-json-schema": "^0.59.0"
    },
    "vsce": {
        "dependencies": false,
        "gitlabBranch": "main",
        "githubBranch": "main"
    },
    "contributes": {
        "languages": [
            {
                "id": "kerml",
                "aliases": [
                    "KerML"
                ],
                "extensions": [
                    ".kerml"
                ],
                "configuration": "./language-configuration.json"
            },
            {
                "id": "sysml",
                "aliases": [
                    "SysML"
                ],
                "extensions": [
                    ".sysml"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "kerml",
                "scopeName": "source.kerml",
                "path": "./syntaxes/kerml.tmLanguage.json"
            },
            {
                "language": "sysml",
                "scopeName": "source.sysml",
                "path": "./syntaxes/sysml.tmLanguage.json"
            },
            {
                "path": "./syntaxes/sysml.md.tmLanguage.json",
                "scopeName": "markdown.sysml.codeblock",
                "injectTo": [
                    "text.html.markdown"
                ],
                "embeddedLanguages": {
                    "meta.embedded.block.sysml": "sysml"
                }
            },
            {
                "path": "./syntaxes/kerml.md.tmLanguage.json",
                "scopeName": "markdown.kerml.codeblock",
                "injectTo": [
                    "text.html.markdown"
                ],
                "embeddedLanguages": {
                    "meta.embedded.block.kerml": "kerml"
                }
            }
        ],
        "semanticTokenTypes": [
            {
                "id": "annotation",
                "superType": "relationship",
                "description": "Annotation"
            },
            {
                "id": "annotationBody",
                "superType": "string",
                "description": "Annotation body"
            },
            {
                "id": "relationship",
                "superType": "modifier",
                "description": "Relationship element"
            },
            {
                "id": "metaclass",
                "superType": "struct",
                "description": "Metaclass element"
            }
        ],
        "semanticTokenModifiers": [],
        "commands": [
            {
                "command": "syside.editor.dumpAst.console",
                "shortTitle": "Dump AST of the current selection",
                "title": "SysIDE Editor: Dump AST of the current selection in the active text editor"
            },
            {
                "command": "syside.editor.dumpMeta.console",
                "shortTitle": "Dump Meta of the current selection",
                "title": "SysIDE Editor: Dump Meta of the current selection in the active text editor"
            },
            {
                "command": "syside.editor.updateDocument",
                "shortTitle": "Update current document",
                "title": "SysIDE Editor: Update current document"
            },
            {
                "command": "syside.editor.mro.console",
                "shortTitle": "Get MRO of the current node",
                "title": "SysIDE Editor: Get MRO of the current node"
            },
            {
                "command": "syside.editor.children.console",
                "shortTitle": "Get children of the current node",
                "title": "SysIDE Editor: Get all direct, inherited and imported children of the current node"
            },
            {
                "command": "syside.editor.scope.console",
                "shortTitle": "Get elements in scope of the current node",
                "title": "SysIDE Editor: Get all elements in scope of the current node"
            },
            {
                "command": "syside.editor.evaluate.console",
                "shortTitle": "Evaluate the selected expression",
                "title": "SysIDE Editor: Evaluate the selected expression or feature value"
            },
            {
                "command": "syside.editor.allCommands.console",
                "shortTitle": "Get all available language server commands",
                "title": "SysIDE Editor: Get all available language server commands"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "submenu": "syside.editor.commands"
                }
            ],
            "syside.editor.commands": [
                {
                    "command": "syside.editor.dumpAst.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.editor.dumpMeta.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.editor.updateDocument",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.editor.mro.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.editor.children.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.editor.scope.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.editor.evaluate.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.editor.allCommands.console",
                    "group": "SysML",
                    "when": "editorLangId =~ /(ker|sys)ml/"
                }
            ]
        },
        "submenus": [
            {
                "id": "syside.editor.commands",
                "label": "SysML"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "SysIDE configuration",
            "properties": {
                "syside.editor.trace.server": {
                    "scope": "window",
                    "type": "string",
                    "enum": [
                        "messages",
                        "off",
                        "verbose"
                    ],
                    "default": "off",
                    "description": "Server trace level, implicitly used by the default VS Code LanguageClient"
                },
                "syside.editor.standardLibrary": {
                    "scope": "window",
                    "type": "boolean",
                    "default": true,
                    "description": "If true, parse the bundled standard library"
                },
                "syside.editor.standardLibraryPath": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": null,
                    "description": "If set, use this path to import standard library files"
                },
                "syside.editor.logStatistics": {
                    "scope": "window",
                    "type": "boolean",
                    "default": false,
                    "description": "If true, build times will be reported"
                },
                "syside.editor.defaultBuildOptions.validationChecks": {
                    "scope": "window",
                    "type": "string",
                    "enum": [
                        "all",
                        "none"
                    ],
                    "default": "all",
                    "description": "Which validation checks are enabled for files"
                },
                "syside.editor.defaultBuildOptions.ignoreMetamodelErrors": {
                    "scope": "window",
                    "type": "boolean",
                    "default": false,
                    "description": "If set, ignore all metamodel errors"
                },
                "syside.editor.defaultBuildOptions.standardLibrary": {
                    "scope": "window",
                    "type": "string",
                    "enum": [
                        "local",
                        "none",
                        "standard"
                    ],
                    "enumDescriptions": [
                        "skip setting up relationships to the standard library elements",
                        "use default standard library",
                        "use standard library elements from the document locally, useful for testing"
                    ],
                    "default": "standard",
                    "description": "Set type of standard library:\n 'none' - skip setting up relationships to the standard library elements\n 'standard' - use default standard library\n 'local' - use standard library elements from the document locally, useful for testing"
                },
                "syside.editor.debug.scopeInLinkingErrors": {
                    "scope": "window",
                    "type": "string",
                    "enum": [
                        "members",
                        "none",
                        "types"
                    ],
                    "default": "none",
                    "description": "Append elements in scope to linking errors"
                },
                "syside.editor.debug.stacktraceInLinkingErrors": {
                    "scope": "window",
                    "type": "boolean",
                    "default": false,
                    "description": "Append stacktrace to thrown errors while resolving references"
                },
                "syside.editor.debug.linkingTrace": {
                    "scope": "window",
                    "type": "boolean",
                    "default": false,
                    "description": "Log linking order"
                },
                "syside.editor.plugins": {
                    "scope": "machine-overridable",
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string",
                        "description": "Path to a .js script or directory of .js scripts"
                    },
                    "description": "Additional plugin paths (.js scripts or directories with .js scripts)\nthat will be loaded on server start-up"
                },
                "syside.editor.client.extensions": {
                    "scope": "window",
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string",
                        "description": "VS Code extension identifier"
                    },
                    "description": "VS Code extensions that extend the language client"
                },
                "syside.editor.server.args.run": {
                    "scope": "window",
                    "type": "array",
                    "items": {
                        "type": [
                            "integer",
                            "string"
                        ]
                    },
                    "default": [],
                    "description": "Command line interface arguments in release mode"
                },
                "syside.editor.server.args.debug": {
                    "scope": "window",
                    "type": "array",
                    "items": {
                        "type": [
                            "integer",
                            "string"
                        ]
                    },
                    "default": null,
                    "description": "Command line interface arguments in debug mode"
                },
                "syside.editor.server.path": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "description": "Server entry path, relative paths will be resolved from the first workspace folder"
                },
                "syside.editor.skipWorkspaceInit": {
                    "description": "Skip collecting files matching extensions in the current workspace on\nstartup",
                    "type": "boolean",
                    "scope": "window",
                    "default": false
                },
                "syside.editor.defaultBuildOptions.standalone": {
                    "description": "If true, the document will be built isolated from all the other\ndocuments, i.e. no indexing, no global scope. It's main use is for\ntesting so that each new built file doesn't pollute the global scope and\ninfluence other test results.",
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.editor.formatting.null_expression.default": {
                    "description": "Controls `NullExpression` formatting:\n* `null`: always formatted as `null`\n* `brackets`: always formatted as `()`\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "brackets",
                        "null",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.null_expression.fallback": {
                    "description": "Controls `NullExpression` formatting:\n* `null`: always formatted as `null`\n* `brackets`: always formatted as `()`\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "brackets",
                        "null"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.literal_real": {
                    "description": "Controls `LiteralReal` formatting. Only applies to those numbers that are\nnot in the source text.",
                    "default": "none",
                    "enum": [
                        "exp",
                        "none",
                        "prec"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.strip_unnecessary_quotes": {
                    "description": "Controls identifier formatting. If true, strips quotes from identifiers\nif the name doesn't have restricted characters",
                    "default": true,
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.editor.formatting.sequence_expression_trailing_comma": {
                    "description": "Controls `SequenceExpression` formatting. If true, sequence expressions\nwill be printed with a trailing comma if broken.",
                    "default": true,
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.editor.formatting.operator_break": {
                    "description": "Controls binary operator placement on line breaks.\n* `after`: operators are placed on the same line as the LHS expression\n* `before`: operators are placed on the same line as the RHS expression",
                    "default": "after",
                    "enum": [
                        "after",
                        "before"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.bracket_spacing": {
                    "description": "If true, adds a space around brackets on a single line",
                    "default": true,
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.editor.formatting.comment_keyword.default": {
                    "description": "Controls `comment` keyword formatting:\n* `always`: `comment` will always be printed\n* `as_needed`: `comment` will only be printed as needed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.comment_keyword.fallback": {
                    "description": "Controls `comment` keyword formatting:\n* `always`: `comment` will always be printed\n* `as_needed`: `comment` will only be printed as needed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.comment_about_break": {
                    "description": "Controls line break preceding `about` in `Comment`:\n* `always`: about list is always on a new line\n* `as_needed`: printer tries to fit about list on the previous line",
                    "default": "as_needed",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.markdown_comments": {
                    "description": "Controls `Comment` and `Documentation` body formatting. If true, trailing\nwhitespace is preserved on each line but last.",
                    "default": true,
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.editor.formatting.textual_representation_keyword.default": {
                    "description": "Controls `rep` keyword formatting:\n* `always`: `rep` will always be printed\n* `as_needed`: `rep` will only be printed as needed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.textual_representation_keyword.fallback": {
                    "description": "Controls `rep` keyword formatting:\n* `always`: `rep` will always be printed\n* `as_needed`: `rep` will only be printed as needed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.textual_representation_language_break": {
                    "description": "Controls line break preceding `language` in `TextualRepresentation`:\n* `always`: language is always on a new line\n* `as_needed`: printer tries to fit language on the previous line",
                    "default": "always",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.empty_namespace_brackets.default": {
                    "description": "Controls formatting of empty children blocks:\n* `always`: empty blocks are always formatted as `{}`\n* `never`: empty blocks are always formatted as `;`\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.empty_namespace_brackets.fallback": {
                    "description": "Controls formatting of empty children blocks:\n* `always`: empty blocks are always formatted as `{}`\n* `never`: empty blocks are always formatted as `;`\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.merge_declaration_disjoining": {
                    "description": "Controls disjoining formatting in type declarations. If true, all\ndisjoinings are merged into a single group. Requires KerML.",
                    "default": false,
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.editor.formatting.merge_unioning": {
                    "description": "Controls unioning formatting in type declarations. If true, all unionings\nare merged into a single group. Requires KerML.",
                    "default": false,
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.editor.formatting.merge_intersecting": {
                    "description": "Controls intersecting formatting in type declarations. If true, all\nintersectings are merged into a single group. Requires KerML.",
                    "default": false,
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.editor.formatting.merge_differencing": {
                    "description": "Controls differencing formatting in type declarations. If true, all\ndifferencings are merged into a single group. Requires KerML.",
                    "default": false,
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.editor.formatting.merge_feature_chaining": {
                    "description": "Controls feature chaining formatting in feature declarations. If true,\nall feature chainings are merged into a single group. Requires KerML.",
                    "default": false,
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.editor.formatting.merge_declaration_type_featuring": {
                    "description": "Controls type featuring formatting in feature declarations. If true, all\ntype featurings are merged into a single group. Requires KerML.",
                    "default": false,
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_specialization.default": {
                    "description": "Controls specialization formatting.\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "keyword",
                        "preserve",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_specialization.fallback": {
                    "description": "Controls specialization formatting.\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "keyword",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_conjugation.default": {
                    "description": "Controls conjugation formatting. Requires KerML.\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "keyword",
                        "preserve",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_conjugation.fallback": {
                    "description": "Controls conjugation formatting. Requires KerML.\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "keyword",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_subsetting.default": {
                    "description": "Controls subsetting formatting.\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "keyword",
                        "preserve",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_subsetting.fallback": {
                    "description": "Controls subsetting formatting.\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "keyword",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_subclassification.default": {
                    "description": "Controls subclassification formatting.\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "keyword",
                        "preserve",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_subclassification.fallback": {
                    "description": "Controls subclassification formatting.\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "keyword",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_redefinition.default": {
                    "description": "Controls redefinition formatting.\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "keyword",
                        "preserve",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_redefinition.fallback": {
                    "description": "Controls redefinition formatting.\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "keyword",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_reference_subsetting.default": {
                    "description": "Controls reference subsetting formatting in feature declarations.\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "keyword",
                        "preserve",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_reference_subsetting.fallback": {
                    "description": "Controls reference subsetting formatting in feature declarations.\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "keyword",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_feature_typing.default": {
                    "description": "Controls feature typing formatting.\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "keyword",
                        "preserve",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_feature_typing.fallback": {
                    "description": "Controls feature typing formatting.\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "keyword",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_conjugated_port_typing.default": {
                    "description": "Controls conjugated port typing formatting in port declarations.\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "keyword",
                        "preserve",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.declaration_conjugated_port_typing.fallback": {
                    "description": "Controls conjugated port typing formatting in port declarations.\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "keyword",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.feature_value_equals.default": {
                    "description": "Controls feature value equals token formatting whenever it can be\nomitted:\n* `as_needed`: `=` will only be printed if it is required by the grammar\n* `always`: `=` will be always printed when it is acceptable by the\n  grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.feature_value_equals.fallback": {
                    "description": "Controls feature value equals token formatting whenever it can be\nomitted:\n* `as_needed`: `=` will only be printed if it is required by the grammar\n* `always`: `=` will be always printed when it is acceptable by the\n  grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.feature_keyword.default": {
                    "description": "Controls `feature` keyword formatting in KerML:\n* `always`: `feature` keyword is always printed\n* `as_needed`: `feature` keyword is printed only when required by the\n  grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.feature_keyword.fallback": {
                    "description": "Controls `feature` keyword formatting in KerML:\n* `always`: `feature` keyword is always printed\n* `as_needed`: `feature` keyword is printed only when required by the\n  grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.public_keyword.default": {
                    "description": "Controls `public` keyword formatting:\n* `always`: `public` will always be printed\n* `never`: `public` will never be printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.public_keyword.fallback": {
                    "description": "Controls `public` keyword formatting:\n* `always`: `public` will always be printed\n* `never`: `public` will never be printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.specialization_keyword_specialization.default": {
                    "description": "Controls `specialization` keyword formatting in specialization members:\n* `always`: `specialization` will always be printed.\n* `as_needed`: `specialization` will be printed only if required by the\n  grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.specialization_keyword_specialization.fallback": {
                    "description": "Controls `specialization` keyword formatting in specialization members:\n* `always`: `specialization` will always be printed.\n* `as_needed`: `specialization` will be printed only if required by the\n  grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.specialization_keyword_subclassification.default": {
                    "description": "Controls `specialization` keyword formatting in subclassification\nmembers:\n* `always`: `specialization` will always be printed.\n* `as_needed`: `specialization` will be printed only if required by the\n  grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.specialization_keyword_subclassification.fallback": {
                    "description": "Controls `specialization` keyword formatting in subclassification\nmembers:\n* `always`: `specialization` will always be printed.\n* `as_needed`: `specialization` will be printed only if required by the\n  grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.specialization_keyword_feature_typing.default": {
                    "description": "Controls `specialization` keyword formatting in feature typing members:\n* `always`: `specialization` will always be printed.\n* `as_needed`: `specialization` will be printed only if required by the\n  grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.specialization_keyword_feature_typing.fallback": {
                    "description": "Controls `specialization` keyword formatting in feature typing members:\n* `always`: `specialization` will always be printed.\n* `as_needed`: `specialization` will be printed only if required by the\n  grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.specialization_keyword_subsetting.default": {
                    "description": "Controls `specialization` keyword formatting in subsetting members:\n* `always`: `specialization` will always be printed.\n* `as_needed`: `specialization` will be printed only if required by the\n  grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.specialization_keyword_subsetting.fallback": {
                    "description": "Controls `specialization` keyword formatting in subsetting members:\n* `always`: `specialization` will always be printed.\n* `as_needed`: `specialization` will be printed only if required by the\n  grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.specialization_keyword_redefinition.default": {
                    "description": "Controls `specialization` keyword formatting in redefinition members:\n* `always`: `specialization` will always be printed.\n* `as_needed`: `specialization` will be printed only if required by the\n  grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.specialization_keyword_redefinition.fallback": {
                    "description": "Controls `specialization` keyword formatting in redefinition members:\n* `always`: `specialization` will always be printed.\n* `as_needed`: `specialization` will be printed only if required by the\n  grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.conjugation_keyword.default": {
                    "description": "Controls `conjugation` keyword formatting in conjugation members:\n* `always`: `conjugation` will always be printed.\n* `as_needed`: `conjugation` will be printed only if required by the\n  grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.conjugation_keyword.fallback": {
                    "description": "Controls `conjugation` keyword formatting in conjugation members:\n* `always`: `conjugation` will always be printed.\n* `as_needed`: `conjugation` will be printed only if required by the\n  grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.disjoining_keyword.default": {
                    "description": "Controls `disjoining` keyword formatting in disjoining members:\n* `always`: `disjoining` will always be printed.\n* `as_needed`: `disjoining` will be printed only if required by the\n  grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.disjoining_keyword.fallback": {
                    "description": "Controls `disjoining` keyword formatting in disjoining members:\n* `always`: `disjoining` will always be printed.\n* `as_needed`: `disjoining` will be printed only if required by the\n  grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.inverting_keyword.default": {
                    "description": "Controls `inverting` keyword formatting in inverting members:\n* `always`: `inverting` will always be printed.\n* `as_needed`: `inverting` will be printed only if required by the\n  grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.inverting_keyword.fallback": {
                    "description": "Controls `inverting` keyword formatting in inverting members:\n* `always`: `inverting` will always be printed.\n* `as_needed`: `inverting` will be printed only if required by the\n  grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.featuring_of_keyword.default": {
                    "description": "Controls `of` keyword formatting in type featuring members:\n* `always`: `of` will always be printed.\n* `as_needed`: `of` will be printed only if required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.featuring_of_keyword.fallback": {
                    "description": "Controls `of` keyword formatting in type featuring members:\n* `always`: `of` will always be printed.\n* `as_needed`: `of` will be printed only if required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.dependency_from_keyword.default": {
                    "description": "Controls `from` keyword formatting in dependencies:\n* `always`: `from` will always be printed.\n* `as_needed`: `from` will be printed only if required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.dependency_from_keyword.fallback": {
                    "description": "Controls `from` keyword formatting in dependencies:\n* `always`: `from` will always be printed.\n* `as_needed`: `from` will be printed only if required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.invariant_true_keyword.default": {
                    "description": "Controls `true` keyword formatting in invariants:\n* `never`: `true` is never printed\n* `always`: `true` is always printed if invariant is not negated\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.invariant_true_keyword.fallback": {
                    "description": "Controls `true` keyword formatting in invariants:\n* `never`: `true` is never printed\n* `always`: `true` is always printed if invariant is not negated\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.multiplicity_placement": {
                    "description": "Controls multiplicity placement in type declarations:\n* `first`: multiplicity is printed before any specializations\n* `first-specialization`: multiplicity is printed after the first\n  specialization\n* `last`: multiplicity is printed after all specializations",
                    "default": "first-specialization",
                    "enum": [
                        "first",
                        "first-specialization",
                        "last"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.metadata_feature_keyword.default": {
                    "description": "Controls metadata feature keyword used.\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "@",
                        "metadata",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.metadata_feature_keyword.fallback": {
                    "description": "Controls metadata feature keyword used.\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "@",
                        "metadata"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.metadata_body_feature_keyword.default": {
                    "description": "Controls `feature` (KerML) and `ref` (SysML) keyword formatting in\nmetadata features:\n* `always`: keywords are always printed\n* `never`: keywords are never printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.metadata_body_feature_keyword.fallback": {
                    "description": "Controls `feature` (KerML) and `ref` (SysML) keyword formatting in\nmetadata features:\n* `always`: keywords are always printed\n* `never`: keywords are never printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.metadata_body_feature_redefines.default": {
                    "description": "Controls first feature redefinition formatting inside MetadataFeature\nbodies:\n* `keyword`: `redefines` is printed\n* `token`: `:>>` is printed\n* `none`: nothing is printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "keyword",
                        "none",
                        "preserve",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.metadata_body_feature_redefines.fallback": {
                    "description": "Controls first feature redefinition formatting inside MetadataFeature\nbodies:\n* `keyword`: `redefines` is printed\n* `token`: `:>>` is printed\n* `none`: nothing is printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "keyword",
                        "none",
                        "token"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_allocation_usages.default": {
                    "description": "Controls allocation usage ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_allocation_usages.fallback": {
                    "description": "Controls allocation usage ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_connectors.default": {
                    "description": "Controls connector ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_connectors.fallback": {
                    "description": "Controls connector ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_connectors_from_keyword.default": {
                    "description": "Controls `from` keyword formatting in binary connectors:\n* `always`: `from` is always printed\n* `as_needed`: `from` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_connectors_from_keyword.fallback": {
                    "description": "Controls `from` keyword formatting in binary connectors:\n* `always`: `from` is always printed\n* `as_needed`: `from` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_binding_connectors.default": {
                    "description": "Controls binding connector ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_binding_connectors.fallback": {
                    "description": "Controls binding connector ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_binding_connector_of_keyword.default": {
                    "description": "Controls `of` keyword formatting in binary binding connectors:\n* `always`: `of` is always printed\n* `as_needed`: `of` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_binding_connector_of_keyword.fallback": {
                    "description": "Controls `of` keyword formatting in binary binding connectors:\n* `always`: `of` is always printed\n* `as_needed`: `of` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_successions.default": {
                    "description": "Controls succession ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_successions.fallback": {
                    "description": "Controls succession ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_succession_first_keyword.default": {
                    "description": "Controls `first` keyword formatting in binary successions:\n* `always`: `first` is always printed\n* `as_needed`: `first` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_succession_first_keyword.fallback": {
                    "description": "Controls `first` keyword formatting in binary successions:\n* `always`: `first` is always printed\n* `as_needed`: `first` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.item_flow_from_keyword.default": {
                    "description": "Controls `from` keyword formatting in item flows:\n* `always`: `from` is always printed\n* `as_needed`: `from` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.item_flow_from_keyword.fallback": {
                    "description": "Controls `from` keyword formatting in item flows:\n* `always`: `from` is always printed\n* `as_needed`: `from` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.succession_item_flow_from_keyword.default": {
                    "description": "Controls `from` keyword formatting in succession item flows:\n* `always`: `from` is always printed\n* `as_needed`: `from` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.succession_item_flow_from_keyword.fallback": {
                    "description": "Controls `from` keyword formatting in succession item flows:\n* `always`: `from` is always printed\n* `as_needed`: `from` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.flow_connection_usage_from_keyword.default": {
                    "description": "Controls `from` keyword formatting in flow connection usages:\n* `always`: `from` is always printed\n* `as_needed`: `from` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.flow_connection_usage_from_keyword.fallback": {
                    "description": "Controls `from` keyword formatting in flow connection usages:\n* `always`: `from` is always printed\n* `as_needed`: `from` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.succession_flow_connection_usage_from_keyword.default": {
                    "description": "Controls `from` keyword formatting in succession flow connection usages:\n* `always`: `from` is always printed\n* `as_needed`: `from` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.succession_flow_connection_usage_from_keyword.fallback": {
                    "description": "Controls `from` keyword formatting in succession flow connection usages:\n* `always`: `from` is always printed\n* `as_needed`: `from` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.ordered_nonunique_priority.default": {
                    "description": "Controls `ordered` and `nonunique` print order:\n* `ordered`: `ordered` is printed first\n* `nonunique`: `nonunique` is printed first\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "nonunique",
                        "ordered",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.ordered_nonunique_priority.fallback": {
                    "description": "Controls `ordered` and `nonunique` print order:\n* `ordered`: `ordered` is printed first\n* `nonunique`: `nonunique` is printed first\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "nonunique",
                        "ordered"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.enum_member_keyword.default": {
                    "description": "Controls `enum` keyword formatting inside enum definitions:\n* `always`: `enum` is always printed\n* `never`: `enum` is never printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.enum_member_keyword.fallback": {
                    "description": "Controls `enum` keyword formatting inside enum definitions:\n* `always`: `enum` is always printed\n* `never`: `enum` is never printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.occurrence_keyword.default": {
                    "description": "Controls `occurrence` keyword formatting in  occurrence usages and\ndefinitions:\n* `always`: `occurrence` is always printed\n* `as_needed`: `occurrence` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.occurrence_keyword.fallback": {
                    "description": "Controls `occurrence` keyword formatting in  occurrence usages and\ndefinitions:\n* `always`: `occurrence` is always printed\n* `as_needed`: `occurrence` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binding_connector_as_usage_keyword.default": {
                    "description": "Controls `binding` formatting in binding connectors as usages:\n* `always`: `binding` is always printed\n* `as_needed`: `binding` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binding_connector_as_usage_keyword.fallback": {
                    "description": "Controls `binding` formatting in binding connectors as usages:\n* `always`: `binding` is always printed\n* `as_needed`: `binding` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.succession_as_usage_keyword.default": {
                    "description": "Controls `succession` formatting in successions as usages:\n* `always`: `succession` is always printed\n* `as_needed`: `succession` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.succession_as_usage_keyword.fallback": {
                    "description": "Controls `succession` formatting in successions as usages:\n* `always`: `succession` is always printed\n* `as_needed`: `succession` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.assert_constraint_usage_keyword.default": {
                    "description": "Controls `constraint` formatting in assert constraint usages:\n* `always`: `constraint` is always printed\n* `as_needed`: `constraint` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.assert_constraint_usage_keyword.fallback": {
                    "description": "Controls `constraint` formatting in assert constraint usages:\n* `always`: `constraint` is always printed\n* `as_needed`: `constraint` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.event_occurrence_keyword.default": {
                    "description": "Controls `occurrence` keyword formatting in event occurrence usages:\n* `always`: `occurrence` is always printed\n* `as_needed`: `occurrence` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.event_occurrence_keyword.fallback": {
                    "description": "Controls `occurrence` keyword formatting in event occurrence usages:\n* `always`: `occurrence` is always printed\n* `as_needed`: `occurrence` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.exhibit_state_usage_keyword.default": {
                    "description": "Controls `state` formatting in exhibit state usages:\n* `always`: `state` is always printed\n* `as_needed`: `state` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.exhibit_state_usage_keyword.fallback": {
                    "description": "Controls `state` formatting in exhibit state usages:\n* `always`: `state` is always printed\n* `as_needed`: `state` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.include_use_case_usage_keyword.default": {
                    "description": "Controls `use case` formatting in include use case usages:\n* `always`: `use case` is always printed\n* `as_needed`: `use case` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.include_use_case_usage_keyword.fallback": {
                    "description": "Controls `use case` formatting in include use case usages:\n* `always`: `use case` is always printed\n* `as_needed`: `use case` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.perform_action_usage_keyword.default": {
                    "description": "Controls `action` formatting in perform action usages:\n* `always`: `action` is always printed\n* `as_needed`: `action` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.perform_action_usage_keyword.fallback": {
                    "description": "Controls `action` formatting in perform action usages:\n* `always`: `action` is always printed\n* `as_needed`: `action` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.satisfy_requirement_keyword.default": {
                    "description": "Controls `requirement` formatting in satisfy requirement usages:\n* `always`: `requirement` is always printed\n* `as_needed`: `requirement` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.satisfy_requirement_keyword.fallback": {
                    "description": "Controls `requirement` formatting in satisfy requirement usages:\n* `always`: `requirement` is always printed\n* `as_needed`: `requirement` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.satisfy_requirement_assert_keyword.default": {
                    "description": "Controls `assert` formatting in satisfy requirement usages:\n* `always`: `assert` is always printed\n* `never`: `assert` is never printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.satisfy_requirement_assert_keyword.fallback": {
                    "description": "Controls `assert` formatting in satisfy requirement usages:\n* `always`: `assert` is always printed\n* `never`: `assert` is never printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.allocation_usage_keyword.default": {
                    "description": "Controls `allocation` formatting in allocation usages:\n* `always`: `allocation` is always printed\n* `as_needed`: `allocation` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.allocation_usage_keyword.fallback": {
                    "description": "Controls `allocation` formatting in allocation usages:\n* `always`: `allocation` is always printed\n* `as_needed`: `allocation` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.connection_usage_keyword.default": {
                    "description": "Controls `connection` formatting in connection usages:\n* `always`: `connection` is always printed\n* `as_needed`: `connection` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.connection_usage_keyword.fallback": {
                    "description": "Controls `connection` formatting in connection usages:\n* `always`: `connection` is always printed\n* `as_needed`: `connection` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_connection_usages.default": {
                    "description": "Controls connection usage ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_connection_usages.fallback": {
                    "description": "Controls connection usage ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_interface_usages.default": {
                    "description": "Controls interface usage ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.binary_interface_usages.fallback": {
                    "description": "Controls interface usage ends formatting:\n* `always`: binary ends are printed as binary declaration\n* `never: binary ends are printed as nary declaration\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.interface_usage_connect_keyword.default": {
                    "description": "Controls `connect` formatting in interface usages:\n* `always`: `connect` is always printed\n* `as_needed`: `connect` is only printed when required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.interface_usage_connect_keyword.fallback": {
                    "description": "Controls `connect` formatting in interface usages:\n* `always`: `connect` is always printed\n* `as_needed`: `connect` is only printed when required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.action_node_keyword.default": {
                    "description": "Controls `action` formatting in action nodes:\n* `always`: `action` is always printed\n* `as_needed`: `action` is printed only if required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.action_node_keyword.fallback": {
                    "description": "Controls `action` formatting in action nodes:\n* `always`: `action` is always printed\n* `as_needed`: `action` is printed only if required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.while_loop_parenthesize_condition": {
                    "description": "Controls `while (...)` while loop action condition expression formatting:\n* `always`: expression is printed with parentheses\n* `never`: expression is printed without parentheses",
                    "default": "on_break",
                    "enum": [
                        "always",
                        "never",
                        "on_break"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.while_loop_parenthesize_until": {
                    "description": "Controls `until (...)` while loop action condition expression formatting:\n* `always`: expression is printed with parentheses\n* `never`: expression is printed without parentheses",
                    "default": "on_break",
                    "enum": [
                        "always",
                        "never",
                        "on_break"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.if_parenthesize_condition": {
                    "description": "Controls `if (...)` condition expression formatting:\n* `always`: expression is printed with parentheses\n* `never`: expression is printed without parentheses",
                    "default": "on_break",
                    "enum": [
                        "always",
                        "never",
                        "on_break"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.transition_usage_parenthesize_guard": {
                    "description": "Controls `if (...)` condition expression in transition usages formatting:\n* `always`: expression is printed with parentheses\n* `never`: expression is printed without parentheses",
                    "default": "on_break",
                    "enum": [
                        "always",
                        "never",
                        "on_break"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.element_filter_parenthesize": {
                    "description": "Controls `filter (...)` condition expression in element filter memberships\nformatting:\n* `always`: expression is printed with parentheses\n* `never`: expression is printed without parentheses",
                    "default": "on_break",
                    "enum": [
                        "always",
                        "never",
                        "on_break"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.transition_usage_keyword.default": {
                    "description": "Controls `transition` formatting in transition usages:\n* `always`: `transition` is always printed if permitted by the grammar\n* `as_needed`: `transition` is only printed if required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.transition_usage_keyword.fallback": {
                    "description": "Controls `transition` formatting in transition usages:\n* `always`: `transition` is always printed if permitted by the grammar\n* `as_needed`: `transition` is only printed if required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.transition_usage_first_keyword.default": {
                    "description": "Controls `first` formatting in transition usages:\n* `always`: `first` is always printed if permitted by the grammar\n* `as_needed`: `first` is only printed if required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.transition_usage_first_keyword.fallback": {
                    "description": "Controls `first` formatting in transition usages:\n* `always`: `first` is always printed if permitted by the grammar\n* `as_needed`: `first` is only printed if required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.framed_concern_keyword.default": {
                    "description": "Controls `concern` formatting in framed concern usages:\n* `always`: `concern` is always printed\n* `as_needed`: `concern` is only printed if required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.framed_concern_keyword.fallback": {
                    "description": "Controls `concern` formatting in framed concern usages:\n* `always`: `concern` is always printed\n* `as_needed`: `concern` is only printed if required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.reference_usage_keyword.default": {
                    "description": "Controls `ref` formatting in reference usages:\n* `always`: `ref` is always printed\n* `as_needed`: `ref` is only printed if required by the grammar\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "as_needed",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.reference_usage_keyword.fallback": {
                    "description": "Controls `ref` formatting in reference usages:\n* `always`: `ref` is always printed\n* `as_needed`: `ref` is only printed if required by the grammar\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "as_needed"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.attribute_usage_reference_keyword.default": {
                    "description": "Controls `ref` formatting in attribute usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.attribute_usage_reference_keyword.fallback": {
                    "description": "Controls `ref` formatting in attribute usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.event_occurrence_reference_keyword.default": {
                    "description": "Controls `ref` formatting in event occurrence usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.event_occurrence_reference_keyword.fallback": {
                    "description": "Controls `ref` formatting in event occurrence usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.port_usage_reference_keyword.default": {
                    "description": "Controls `ref` formatting in attribute usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.port_usage_reference_keyword.fallback": {
                    "description": "Controls `ref` formatting in attribute usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.connection_usage_reference_keyword.default": {
                    "description": "Controls `ref` formatting in connection usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.connection_usage_reference_keyword.fallback": {
                    "description": "Controls `ref` formatting in connection usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.connector_as_usage_reference_keyword.default": {
                    "description": "Controls `ref` formatting in connector as usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.connector_as_usage_reference_keyword.fallback": {
                    "description": "Controls `ref` formatting in connector as usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.exhibit_state_reference_keyword.default": {
                    "description": "Controls `ref` formatting in exhibit state usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.exhibit_state_reference_keyword.fallback": {
                    "description": "Controls `ref` formatting in exhibit state usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.include_use_case_reference_keyword.default": {
                    "description": "Controls `ref` formatting in include use case usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.include_use_case_reference_keyword.fallback": {
                    "description": "Controls `ref` formatting in include use case usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.perform_action_reference_keyword.default": {
                    "description": "Controls `ref` formatting in perform action usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls formatting in majority of cases.\n* `preserve`: element preserves source text formatting",
                    "default": "preserve",
                    "enum": [
                        "always",
                        "never",
                        "preserve"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.perform_action_reference_keyword.fallback": {
                    "description": "Controls `ref` formatting in perform action usages:\n* `always`: `ref` is always printed\n* `never`: `ref` is never printed\n\nControls `preserve` formatting for cases when there is no associated\nsource text.",
                    "enum": [
                        "always",
                        "never"
                    ],
                    "type": "string",
                    "scope": "window"
                },
                "syside.editor.formatting.lineWidth": {
                    "description": "Number of columns the formatter will try to fit source text into.",
                    "default": 120,
                    "type": "integer",
                    "scope": "window"
                }
            }
        }
    }
}
